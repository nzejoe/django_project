from django.test import TestCase, Client
from django.urls import reverse
from django.contrib.auth import get_user_model
from .models import Book, Review
from django.contrib.auth.models import Permission

class BookTest(TestCase):

    def setUp(self):
        # create user
        User = get_user_model()
        self.user = User.objects.create_user(
            username= 'joe',
            email= 'joe@company.com',
            password= 'password',
        )

        # create book object
        self.book = Book.objects.create(
            title= 'django for professionals',
            author= 'James',
            price= 34.00
        )
        # create permission
        self.special_permission = Permission.objects.get(codename='special_status')

        # create review for book
        self.review = Review.objects.create(
            book=self.book,
            author=self.user,
            review='One of the best book I have read so far.',
        )
        # create book_list view
        book_list_url = reverse('book_list')
        self.book_list_response = self.client.get(book_list_url)

        # create book_detail view
        self.book_url = self.book.get_absolute_url()
        self.book_detail_response = self.client.get(self.book_url)

        # create non_url view
        self.non_url = '/books/237hee4/'
        self.non_url_response = self.client.get(self.non_url)


    def test_user_creation(self):
        self.assertEqual(self.user.username, 'joe')

    def test_book_create_object(self):
        self.assertEqual(self.book.title, 'django for professionals')
        self.assertEqual(self.book.price, 34.00)


    # logged in user view test
    def test_book_list_view_for_logged_in_user(self):
        self.client.login(email= 'joe@company.com', password= 'password')
        response = self.client.get(reverse('book_list'))
        self.assertEqual(response.status_code, 200)
        self.assertContains(response, 'Django for professionals')
        self.assertTemplateUsed(response, 'books/book_list.html')

    # logged out user test
    def test_book_list_view_for_logged_out_user(self):
        self.client.logout()
        self.assertEqual(self.book_list_response.status_code, 302)
        self.assertTemplateUsed(self.book_list_response, 'books/book_list.html')
        self.assertRedirects(self.book_list_response, '%s?next=/books/' % (reverse('account_login')))
        log_in_response = self.client.get('%s?next=/books/' % (reverse('account_login')))
        self.assertContains(log_in_response, 'Log In')

    def test_book_detail_view_with_permissions(self):
        self.client.login(email='joe@company.com', password='password')
        response = self.client.get(reversed(self.book.get_absolute_url()))
        self.user.user_permissions.add(self.special_permission)
        self.assertEqual(response.status_code, 200)
        self.assertTemplateUsed(response, 'books/book_detail.html')
        self.assertContains(response, 'James')
        self.assertContains(response, 'joe')

    def test_non_url_view(self):
        self.assertEqual(self.non_url_response.status_code, 404)

